package work;

public class researchCommonObject {
	
	
	//1. HOTSPOT中的对象构成：
	//markword： 8 byte
	//class pointer类指针：4 byte 指向对象所属的类T.class
	//instance data成员变量
	//padding:8字节对齐
	//*****方法是放在class文件里面，不是对象里面，需要调用时候用对象的类指针找到类文件，然后调用this传给方法即可
	//*****hotspot是64位虚拟机，但是用的是压缩指针compressedclasspointer，所以类指针，引用变量地址都是4字节，而不是8字节
	
	//2. markword深入解析：
	//(1) 8字节64位的主要内容：hashcode,锁信息,GC信息
	//(2) 补充：(学过的)缓存行一行64字节，通过缓存行对齐，使得同一行只要改一个值，然后就不用去通知其他线程，发往其他CPU了；原先两个修改值位于同一行，使得要发往
	//不同线程不同CPU去确认两个值均修改正确了。
	
	//3. 悲观锁乐观锁自旋锁
	//悲观锁：直接上锁
	//乐观锁：不上锁，等到出现了问题再去处理
	//自旋锁：乐观锁的一种实现，CAS，cas(V,E,NEW) 
	//*****如果V！=E，那就拿到新的期望值E1，然后判断V==E1，然后再返回处理。注意期望值变化了
	
	//4. 读写锁共享锁排他锁
	//读锁：读时候，不给写，允许读
	//写锁：写时候，不给读，也不给写
	//即只有读读存在，其他均互斥
	//共享锁：允许多个线程同时访问代码
	
	//
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

}
